---
import "../styles/global.css";

import Header from "../components/Header.svelte";
import { BreadCrumb } from "../types";

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
  title = "Maria Due",
  breadCrumb = [] as BreadCrumb,
  ogImage = "/assets/icon-512x512.png",
  property,
  typeOf,
  resource,
} = Astro.props;
const { url } = Astro.request;

---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta
      name="google-site-verification"
      content="zo-B2TdZe7lSw-ZoS0usXLKmwI380HjWKWlsSzFKVa8"
    />
    <title>{title}</title>
    <meta name="description" content="Artist site for Maria Due" />
    <link rel="canonical" href={canonicalURL} />
    <link rel="shortcut icon" href="/assets/icon-48x48.png" />
    <link rel="manifest" href="/manifest.webmanifest" />
    <link rel="og:image" href={ogImage} />
    <script>
      if (navigator.serviceWorker) {
        // clean up earlier version of site
        navigator.serviceWorker
          .getRegistrations()
          .then((rs) => rs.forEach((r) => r.unregister()));
      }
    </script>
  </head>

  <body
    vocab="http://schema.org/"
    typeof="MusicGroup"
    resource={canonicalURL.origin}
  >
    <meta property="name" content="Maria Due" />
    <meta
      property="sameAs"
      resource="https://www.wikidata.org/wiki/Q17143368"
    />
    <meta
      property="sameAs"
      resource="https://viaf.org/viaf/73145971487332332164/"
    />
    <meta
      property="sameAs"
      resource="https://no.wikipedia.org/wiki/Maria_Due"
    />
    <Header {breadCrumb} {url} />
    <main {property} typeof={typeOf} {resource}>
      <slot />
    </main>
  </body>
</html>
